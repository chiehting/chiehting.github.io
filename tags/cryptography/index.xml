<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cryptography on Chiehting</title><link>https://chiehting.com/tags/cryptography/</link><description>Recent content in cryptography on Chiehting</description><generator>Hugo -- gohugo.io</generator><copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright><lastBuildDate>Fri, 01 Oct 2021 16:35:00 +0800</lastBuildDate><atom:link href="https://chiehting.com/tags/cryptography/index.xml" rel="self" type="application/rss+xml"/><item><title>淺談加密標準</title><link>https://chiehting.com/posts/encryption-standard/</link><pubDate>Fri, 01 Oct 2021 16:35:00 +0800</pubDate><guid>https://chiehting.com/posts/encryption-standard/</guid><description>
&lt;p>在開發上常會用到資料加密，例如雜湊函式（MD5、SHA-2）、對稱式加密（AES、DES、3DES)、非對稱式加密（RSA演算法）等方式，這篇就來研究一下這些加密方式之差異。&lt;/p>
&lt;h3 id="references">References&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://ithelp.ithome.com.tw/articles/10251031">IThome&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/26029199">知乎&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="cryptography">Cryptography&lt;/h3>
&lt;p>在密碼學當中，加密的形式包含了下面幾種：&lt;/p>
&lt;ul>
&lt;li>Hash Function（雜湊函式）&lt;/li>
&lt;li>Symmetric Encryption（對稱加密）&lt;/li>
&lt;li>Asymmetric Encryption（非對稱加密）&lt;/li>
&lt;/ul>
&lt;h4 id="hash-function">Hash Function&lt;/h4>
&lt;p>雜湊函式是將資料中的，具有不可逆的特性。但是輸入和輸出並不是為一對對應的關係，若同一個函式的雜湊值結果&lt;strong>不同&lt;/strong>，代表原始輸入值也&lt;strong>不同&lt;/strong>；若同一個函式的雜湊值結果&lt;strong>相同&lt;/strong>，不代表原始輸入值也&lt;strong>相同&lt;/strong>。&lt;/p>
&lt;p>雜湊碰撞（collision）意指同一個函式的雜湊值結果&lt;strong>相同&lt;/strong>，但原始輸入值&lt;strong>不相同&lt;/strong>的情況，&lt;a href="https://github.com/corkami/collisions">corkami/collisions&lt;/a> 範例。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nv">$bash&lt;/span> python
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">Python 3.9.6 &lt;span class="o">(&lt;/span>default, Jun &lt;span class="m">29&lt;/span> 2021, 05:25:02&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="o">[&lt;/span>Clang 12.0.5 &lt;span class="o">(&lt;/span>clang-1205.0.22.9&lt;span class="o">)]&lt;/span> on darwin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">Type &lt;span class="s2">&amp;#34;help&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;copyright&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;credits&amp;#34;&lt;/span> or &lt;span class="s2">&amp;#34;license&amp;#34;&lt;/span> &lt;span class="k">for&lt;/span> more information.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">&amp;gt;&amp;gt;&amp;gt; import crypt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">&amp;gt;&amp;gt;&amp;gt; crypt.crypt&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;5dUD&amp;amp;66&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;br&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">&lt;span class="s1">&amp;#39;brokenOz4KxMc&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">8&lt;/span>&lt;span class="cl">&amp;gt;&amp;gt;&amp;gt; crypt.crypt&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;O!&amp;gt;&amp;#39;,%&lt;/span>$&lt;span class="s2">&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;br&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">9&lt;/span>&lt;span class="cl">&lt;span class="s1">&amp;#39;brokenOz4KxMc&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>常見的 Hash Function：&lt;/p>
&lt;ul>
&lt;li>SHA-256：生成256位元值的雜湊值，為常見的雜湊函式之一&lt;/li>
&lt;li>MD5&lt;/li>
&lt;/ul>
&lt;h4 id="symmetric-encryption">Symmetric Encryption&lt;/h4>
&lt;p>對稱式加密為使用同一把金鑰做解密／解密。&lt;/p>
&lt;h5 id="data-encryption-standard">Data Encryption Standard&lt;/h5>
&lt;p>Data Encryption Standard（DES）是基於 56 bits 金鑰 + 8 bits 的奇偶校驗的大小。&lt;a href="https://www.tutorialspoint.com/cryptography/data_encryption_standard.htm">此篇&lt;/a>有加密教學。&lt;/p>
&lt;h5 id="triple-des">Triple DES&lt;/h5>
&lt;p>然而在硬體效能越來越強的情況下，DES 已經不是安全的加密方法，然而用戶不希望花大量的時間跟成本取代 DES 加密，所以衍生出了 Triple DES（3DES）。3DES 是 DES 的變體，也就是將原本使用的金鑰大小變成 56 bits * 3 = 168 bits。&lt;a href="https://www.tutorialspoint.com/cryptography/triple_des.htm">此篇&lt;/a>有加密教學。&lt;/p>
&lt;h5 id="advanced-encryption-standard">Advanced Encryption Standard&lt;/h5>
&lt;p>Advanced Encryption Standard（AES）是用來替代 DES 的加密標準，由於目前的硬體設備的進步使 DES 金鑰 56 bits 已經顯得過小，然後延生的 3DES 雖然可以解決安全性問題但付出的是時間成本。AES 金鑰大小為 128 bits，而效率也比 3DES 來得快，&lt;a href="https://www.tutorialspoint.com/cryptography/advanced_encryption_standard.htm">此篇&lt;/a>有加密教學。&lt;/p>
&lt;h4 id="asymmetric-encryption">Asymmetric Encryption&lt;/h4>
&lt;p>由於對稱式加／解密的金鑰是同一把，若是其中一方金鑰洩露了，就會破壞原本的安全機制。而非對稱式加密是改良了這點，採用了公鑰（public key）與私鑰（private key），公鑰作加密；私鑰做解密。值得注意的是一對鑰匙只能做單向的加解密，大部分的內文加密／解密是採用 &lt;a href="https://ithelp.ithome.com.tw/articles/10188528">RSA + AES&lt;/a> 達到雙向加密。&lt;/p>
&lt;h5 id="rsa">RSA&lt;/h5>
&lt;p>RSA 是基於大數因數分解的加密方式。另外 RSA-155 (512 bits) 被成功分解，所以已經威脅到 1024-bit 金鑰的安全性，普遍認為使用者應儘快升級到2048-bit或以上。&lt;/p>
&lt;h5 id="elliptic-curve-cryptography">Elliptic Curve Cryptography&lt;/h5>
&lt;p>ECC 可以透過較小的密鑰長度提供相當的安全性，但實作起來較複雜。&lt;/p></description></item></channel></rss>