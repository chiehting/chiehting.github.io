<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>command on Chiehting</title><link>https://chiehting.com/tags/command/</link><description>Recent content in command on Chiehting</description><generator>Hugo -- gohugo.io</generator><copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright><lastBuildDate>Thu, 09 May 2024 18:22:16 +0800</lastBuildDate><atom:link href="https://chiehting.com/tags/command/index.xml" rel="self" type="application/rss+xml"/><item><title>MTR</title><link>https://chiehting.com/posts/mtr/</link><pubDate>Thu, 09 May 2024 18:22:16 +0800</pubDate><guid>https://chiehting.com/posts/mtr/</guid><description>
&lt;p>使用 MTR 工具，監測網路狀態。&lt;/p>
&lt;h3 id="mtr-command">MTR command&lt;/h3>
&lt;p>&lt;a href="https://github.com/traviscross/mtr">Github&lt;/a> 原始碼。&lt;/p>
&lt;p>下面命令的含義是使用 MTR 工具對 google.com 進行路徑跟蹤，並使用 TCP 協議進行跟蹤，發送 30 個數據包，並實時顯示每個節點的數據，最終顯示結果並退出程序。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">sudo ./mtr -b -T -r -c &lt;span class="m">30&lt;/span> google.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>-b：表示啟用 Batch 模式。在 Batch 模式下，MTR 將在測試完成後立即顯示結果，並退出程序。這樣可以方便將結果保存到文件中或者進行其他處理。&lt;/p>
&lt;p>-T：表示使用 TCP 進行跟蹤。這個選項告訴 MTR 使用 TCP 協議而不是默認的 UDP 協議進行數據包跟蹤。&lt;/p>
&lt;p>-r：表示顯示實時數據。這個選項告訴 MTR 實時顯示每個節點的數據，而不是等待測試完成後一次性顯示。&lt;/p>
&lt;p>-c 30：表示指定發送的數據包數量為 30 個。這個選項告訴 MTR 在跟蹤路徑時發送 30 個數據包，以便更準確地評估網絡連接的質量。&lt;/p>
&lt;/blockquote>
&lt;p>其運行結果會顯示欄位 &lt;code>HOST&lt;/code>、&lt;code>Loss%&lt;/code>、&lt;code>Snt&lt;/code>、&lt;code>Last&lt;/code>、&lt;code>Avg&lt;/code>、&lt;code>Best&lt;/code>、&lt;code>Wrst&lt;/code>、`StDev，期解釋如下：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Loss%：表示丟包率，即在發送的數據包中丟失的百分比。它表示了從本地主機到目標主機的路徑中，有多少個數據包在傳輸過程中丟失了。丟包率越低，表示網絡連接越穩定。單位為百分比。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Snt：表示發送的數據包數量，即已發送的數據包數量。單位為個。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Last：表示最後一個數據包的往返時間（Round-Trip Time, RTT），即最後一個數據包從本地主機發送到目標主機，並返回到本地主機的時間。單位為毫秒（ms）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Avg：表示所有已發送數據包的平均往返時間，即所有數據包往返時間的平均值。單位為毫秒（ms）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Best：表示已發送數據包的最低往返時間，即所有數據包往返時間中的最小值。單位為毫秒（ms）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Wrst：表示已發送數據包的最高往返時間，即所有數據包往返時間中的最大值。單位為毫秒（ms）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>StDev：表示所有已發送數據包的往返時間的標準偏差，即所有數據包往返時間與平均往返時間的偏差的平方的平均值的平方根。標準偏差越小，表示數據包往返時間的分佈越集中，網絡連接越穩定。單位為毫秒（ms）。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="中間節點的-icmp-封包行為">中間節點的 ICMP 封包行為&lt;/h3>
&lt;p>在使用 &lt;code>mtr&lt;/code> 命令時，&lt;code>-T&lt;/code> 參數的作用是讓 &lt;code>mtr&lt;/code> 使用 TCP 數據包進行探測，而不是默認的 ICMP 數據包。然而，即使使用了 &lt;code>-T&lt;/code> 參數，&lt;code>mtr&lt;/code> 仍然會在探測過程中進行類似於 &lt;code>ping&lt;/code> 的操作，這是因為 &lt;code>mtr&lt;/code> 的核心功能是結合了 &lt;code>ping&lt;/code> 和 &lt;code>traceroute&lt;/code> 的特性。&lt;/p>
&lt;p>具體來說，&lt;code>mtr&lt;/code> 的工作原理是：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>追蹤路由&lt;/strong>：&lt;code>mtr&lt;/code> 會追蹤數據包從源節點到目標節點（如 &lt;code>google.com&lt;/code>）所經過的所有中間節點。&lt;/li>
&lt;li>&lt;strong>持續測試&lt;/strong>：在追蹤路由的同時，&lt;code>mtr&lt;/code> 會對每個中間節點進行持續的測試，計算丟包率和延遲。&lt;/li>
&lt;li>&lt;strong>探測方式&lt;/strong>：即使使用 &lt;code>-T&lt;/code> 參數指定了 TCP 探測，&lt;code>mtr&lt;/code> 仍然會對每個節點進行類似 &lt;code>ping&lt;/code> 的測試，以獲取節點的響應時間和丟包率 。&lt;/li>
&lt;/ol>
&lt;p>因此，&lt;code>-T&lt;/code> 參數主要影響的是探測數據包的類型（TCP 而非 ICMP），但 &lt;code>mtr&lt;/code> 仍然需要對每個節點進行類似 &lt;code>ping&lt;/code> 的操作，以提供完整的網絡質量分析。&lt;/p></description></item></channel></rss>